version: "2"

volumes:
  # Persistent data for databases
  rabbitmq:
  minio:

services:

  # This web application is the frontend, through which the user interacts to
  # build and run containers and see results
  web:
    build: web
    depends_on:
      - rabbitmq
    ports:
      - "8000:8000"

  # Those workers create Docker containers when runners need them
  builder:
    build: builder
    depends_on:
      - rabbitmq

  # Those workers run experiments using Docker images and provided parameters
  runner:
    build: runner
    depends_on:
      - rabbitmq

  # RabbitMQ is used to pass tasks, notifications, and real-time terminal output
  # between components
  # Could possibly be replaced by Amazon SQS
  rabbitmq:
    image: "rabbitmq:3.6.9-management"
    container_name: rs-rabbit
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: hackme
    ports:
      - "8080:15672"

  # Docker registry used to cache images between builders and runners
  # Can be replaced by Amazon ECR
  registry:
    image: "registry:2.6"

  # Object storage used to store uploaded files and generated outputs
  # Can be replaced by Amazon S3
  minio:
    image: "minio/minio:RELEASE.2017-04-29T00-40-27Z"
    volumes:
      - minio:/export
    command: server /export
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: hackmehackme
    ports:
      - "9000:9000"
